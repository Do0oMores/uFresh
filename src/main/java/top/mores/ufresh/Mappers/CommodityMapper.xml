<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.mores.ufresh.DAO.CommodityDao">

    <resultMap id="commodityResultMap" type="top.mores.ufresh.POJO.Commodity">
        <id column="commodity_id" property="commodity_id"/>
        <result column="commodity_name" property="commodity_name"/>
        <result column="type" property="type"/>
        <result column="inventory" property="inventory"/>
        <result column="image" property="image"/>
        <result column="support" property="support"/>
        <result column="mfd" property="mfd"/>
        <result column="exp" property="exp"/>
        <result column="status" property="status"/>
        <result column="tag" property="tag"/>
    </resultMap>

    <select id="getCommodityByName" resultMap="commodityResultMap">
        select * from commodity where commodity_name = #{commodity_name}
    </select>

    <insert id="addCommodity" parameterType="top.mores.ufresh.POJO.Commodity" useGeneratedKeys="true" keyProperty="commodity_id">
        INSERT INTO commodity
        (commodity_name, type, inventory, description, image, support, mfd, exp)
        VALUES
        (#{commodity_name}, #{type}, #{price}, #{invetory}, #{description}, #{image}, #{support}, #{mfd}, #{exp});
    </insert>

    <select id="fetchCommodity" resultMap="commodityResultMap">
        SELECT
        c.commodity_id,
        c.commodity_name,
        c.type,
        c.inventory,
        c.description,
        c.support,
        c.mfd,
        c.exp,
        c.status,
        c.tag,
        c.image,
        MIN(cs.price) AS price
        FROM
        commodity c
        LEFT JOIN
        commodity_specs cs ON c.commodity_id = cs.commodity_id
        GROUP BY
        c.commodity_id, c.commodity_name, c.type, c.inventory, c.description,
        c.support, c.mfd, c.exp, c.status, c.tag, c.image
    </select>

    <select id="fetchUserIndexCommodity" resultMap="commodityResultMap">
        SELECT
        c.commodity_name,
        c.image,
        c.tag,
        c.commodity_id,
        MIN(cs.price) AS price
        FROM
        commodity c
        LEFT JOIN
        commodity_specs cs ON c.commodity_id = cs.commodity_id
        WHERE
        c.status = #{status}
        GROUP BY
        c.commodity_name, c.image, c.tag, c.commodity_id
    </select>

    <select id="selectCommodity" resultMap="commodityResultMap">
        select commodity_name, type, inventory, description, image, support, mfd, exp, status, tag,commodity_id
        from commodity
        <where>
            <trim prefixOverrides="and">
                <if test="commodity_name != null and commodity_name != ''">
                    commodity_name like CONCAT('%', #{commodity_name}, '%')
                </if>
                <if test="support != null and support != ''">
                    and support = #{support}
                </if>
                <if test="type != null and type != ''">
                    and type = #{type}
                </if>
                <if test="mfd != null">
                    and mfd = #{mfd}
                </if>
                <if test="exp != null">
                    and exp = #{exp}
                </if>
            </trim>
        </where>
    </select>

    <select id="getCommodityByID" resultMap="commodityResultMap">
        SELECT
        c.commodity_name,
        c.type,
        c.description,
        c.image,
        c.tag,
        MIN(cs.price) AS price
        FROM
        commodity c
        LEFT JOIN
        commodity_specs cs ON c.commodity_id = cs.commodity_id
        WHERE
        c.commodity_id = #{id}
        GROUP BY
        c.commodity_name, c.type, c.description, c.image, c.tag
    </select>

    <update id="editCommodity">
        update commodity
        <set>
            <if test="commodity_name != null">commodity_name=#{commodity_name},</if>
            <if test="type != null">type=#{type},</if>
            <if test="inventory != null">inventory=#{inventory},</if>
            <if test="description != null">description=#{description},</if>
            <if test="support != null">support=#{support},</if>
            <if test="mfd != null">mfd=#{mfd},</if>
            <if test="exp != null">exp=#{exp},</if>
            <if test="status != null">status=#{status},</if>
            <if test="tag != null">tag=#{tag},</if>
        </set>
        where commodity_id=#{commodity_id}
    </update>
    
    <select id="searchCommodity">
        SELECT
        c.commodity_name,
        c.image,
        c.tag,
        c.commodity_id,
        MIN(cs.price) AS price
        FROM
        commodity c
        LEFT JOIN
        commodity_specs cs ON c.commodity_id = cs.commodity_id
        <where>
            <trim prefixOverrides="and">
                <if test="commodity_name != null and commodity_name != ''">
                    c.commodity_name like CONCAT('%', #{commodity_name}, '%')
                </if>
                <if test="status != null and status != ''">
                    and c.status = #{status}
                </if>
                <if test="type != null and type != ''">
                    and c.type = #{type}
                </if>
            </trim>
        </where>
        GROUP BY
        c.commodity_name, c.image, c.tag, c.commodity_id
    </select>

    <select id="selectCommodityOrigin">
        select commodity_name,support,mfd,exp,type,description from commodity
        where commodity_name like CONCAT('%', #{commodity_name}, '%')
    </select>
</mapper>