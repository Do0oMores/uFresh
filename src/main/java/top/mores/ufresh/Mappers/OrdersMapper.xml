<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.mores.ufresh.DAO.OrdersDao">

    <resultMap id="orderResultMap" type="top.mores.ufresh.POJO.Orders">
        <id column="order_id" property="order_id"/>
        <result column="user_id" property="user_id"/>
        <result column="total_price" property="total_price"/>
        <result column="status" property="status"/>
        <result column="created_time" property="created_time"/>
        <result column="username" property="username"/>
    </resultMap>

    <select id="getOrdersList" resultMap="orderResultMap">
        SELECT
        o.order_uuid,
        o.user_id,
        o.total_price,
        o.status,
        o.created_time,
        u.user_name AS user_name
        FROM
        orders o
        JOIN
        user u
        ON
        o.user_id = u.user_id
    </select>

    <select id="getOrdersByConditions" resultMap="orderResultMap">
        SELECT
        o.order_uuid,
        o.user_id,
        u.user_name AS user_name,
        o.status,
        o.created_time,
        o.total_price
        FROM
        orders o
        JOIN
        user u
        ON
        o.user_id = u.user_id
        <where>
            <if test="order_id != null and order_id!=''">
                o.order_id = #{order_id}
            </if>
            <if test="user_name != null and user_name!=''">
                AND u.user_name LIKE CONCAT('%', #{user_name}, '%')
            </if>
            <if test="status != null and status!=''">
                AND o.status = #{status}
            </if>
        </where>
    </select>

    <select id="getUserOrdersByStatus">
        select order_id,total_price,order_uuid from orders where user_id = #{user_id} and status = #{status}
    </select>

    <insert id="addOrder">
        insert into orders (user_id,total_price,status,created_time,order_uuid) values
        (#{user_id},#{total_price},#{status},#{created_time},#{order_uuid})
    </insert>

    <update id="updateOrderStatus">
        update orders
        <set>
            <if test="status != null">status = #{status},</if>
            <if test="pickup_method != null">pickup_method = #{pickup_method},</if>
            <if test="order_note != null">order_note = #{order_note},</if>
        </set>
        where order_uuid=#{order_uuid}
    </update>

    <delete id="deleteOrder">
        delete from orders
        where order_uuid = #{order_uuid}
    </delete>

    <update id="editOrder">
        update orders
        <set>
            <if test="status !=null">status=#{status},</if>
            <if test="completion_time">completion_time=#{completion_time}</if>
        </set>
        where order_uuid=#{order_uuid}
    </update>

    <select id="getOrdersByDate">
        SELECT
        DATE_FORMAT(completion_time, '%m/%d') AS date
        FROM orders
        WHERE completion_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        GROUP BY DATE(completion_time)
        ORDER BY completion_time;
    </select>
</mapper>